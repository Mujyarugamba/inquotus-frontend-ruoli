{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\151702\\\\Desktop\\\\Inquotus\\\\Inquotus-frontend-ruoli\\\\src\\\\richieste\\\\RichiestaForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { API_BASE } from '../config/config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CATEGORIE = ['✅ Lavori speciali / Edili - Rimozione neve da tetti', '✅ Lavori speciali / Edili - Messa in sicurezza cornicioni o elementi pericolanti', '✅ Lavori speciali / Edili - Riparazione coperture e tetti', '✅ Lavori speciali / Edili - Rifacimento intonaci o pittura facciate', '✅ Lavori speciali / Edili - Interventi su canne fumarie', '✅ Lavori speciali / Edili - Montaggio pannelli solari termici', '✅ Manutenzione e Pulizia - Pulizia tetti', '✅ Manutenzione e Pulizia - Pulizia grondaie', '✅ Manutenzione e Pulizia - Pulizia vetri/vetrate in quota', '✅ Manutenzione e Pulizia - Pulizia pannelli fotovoltaici', '✅ Manutenzione e Pulizia - Pulizia facciate', '✅ Manutenzione e Pulizia - Pulizia silos e ciminiere', '✅ Ispezioni e Controlli - Ispezione facciate', '✅ Ispezioni e Controlli - Ispezione coperture industriali', '✅ Ispezioni e Controlli - Ispezione pale eoliche', '✅ Ispezioni e Controlli - Ispezione torri e antenne', '✅ Ispezioni e Controlli - Ispezione con droni', '✅ Installazioni - Installazione antenne TV o parabole', '✅ Installazioni - Installazione impianti fotovoltaici', '✅ Installazioni - Installazione climatizzatori in quota', '✅ Installazioni - Installazione insegne e cartellonistica', '✅ Installazioni - Installazione linea vita', '✅ Installazioni - Installazione parafulmini', '✅ Installazioni - Montaggio ponteggi mobili temporanei', '✅ Taglio e Verde - Potatura alberi ad alto fusto', '✅ Taglio e Verde - Abbattimento controllato alberi', '✅ Taglio e Verde - Potatura siepi in quota', '✅ Altro - Altro (specifica...)'];\nconst REGIONI = ['Abruzzo', 'Basilicata', 'Calabria', 'Campania', 'Emilia-Romagna', 'Friuli-Venezia Giulia', 'Lazio', 'Liguria', 'Lombardia', 'Marche', 'Molise', 'Piemonte', 'Puglia', 'Sardegna', 'Sicilia', 'Toscana', 'Trentino-Alto Adige', 'Umbria', \"Valle d'Aosta\", 'Veneto'];\nconst RichiestaForm = () => {\n  _s();\n  const [categorie] = useState(CATEGORIE);\n  const [regione, setRegione] = useState('');\n  const [provincia, setProvincia] = useState('');\n  const [localita, setLocalita] = useState('');\n  const [provincieDisponibili, setProvincieDisponibili] = useState([]);\n  const [comuniDisponibili, setComuniDisponibili] = useState([]);\n  const [categoria, setCategoria] = useState('');\n  const [descrizione, setDescrizione] = useState('');\n  const [contatti, setContatti] = useState('');\n  const [urgenza, setUrgenza] = useState(false);\n  const [file, setFile] = useState(null);\n  const [messaggio, setMessaggio] = useState('');\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    if (regione) {\n      fetch(`/data/province/${regione}.json`).then(res => res.json()).then(setProvincieDisponibili).catch(() => setProvincieDisponibili([]));\n    } else {\n      setProvincieDisponibili([]);\n    }\n  }, [regione]);\n  useEffect(() => {\n    if (provincia) {\n      fetch(`/data/comuni/${provincia}.json`).then(res => res.json()).then(setComuniDisponibili).catch(() => setComuniDisponibili([]));\n    } else {\n      setComuniDisponibili([]);\n    }\n  }, [provincia]);\n  const handleFileChange = e => {\n    const file = e.target.files[0];\n    if (file && file.size > 2 * 1024 * 1024) {\n      setMessaggio('❌ L\\'immagine non deve superare i 2MB');\n      return;\n    }\n    if (file && !file.type.startsWith('image/')) {\n      setMessaggio('❌ Formato immagine non valido');\n      return;\n    }\n    setFile(file);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    const token = localStorage.getItem('token');\n    let media_url = '';\n    try {\n      if (file) {\n        const formData = new FormData();\n        formData.append('immagine', file);\n        const uploadRes = await fetch(`${API_BASE}/api/upload`, {\n          method: 'POST',\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          body: formData\n        });\n        const uploadData = await uploadRes.json();\n        if (!uploadRes.ok) throw new Error(uploadData.error);\n        media_url = uploadData.url;\n      }\n      const body = {\n        categoria,\n        localita,\n        provincia,\n        regione,\n        descrizione,\n        contatti,\n        urgenza,\n        media_url\n      };\n      const res = await fetch(`${API_BASE}/api/richiesta`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify(body)\n      });\n      const data = await res.json();\n      if (res.ok) {\n        setMessaggio('✅ Richiesta inviata con successo!');\n        setCategoria('');\n        setLocalita('');\n        setProvincia('');\n        setRegione('');\n        setDescrizione('');\n        setContatti('');\n        setUrgenza(false);\n        setFile(null);\n      } else {\n        setMessaggio(`❌ Errore: ${data.error}`);\n      }\n    } catch (err) {\n      console.error(err);\n      setMessaggio('❌ Errore invio richiesta');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    style: {\n      maxWidth: '600px',\n      margin: '2rem auto'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD83D\\uDCDD Inserisci una nuova richiesta\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Categoria:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: categoria,\n      onChange: e => setCategoria(e.target.value),\n      required: true,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"-- Seleziona --\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), categorie.map((cat, idx) => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: cat,\n        children: cat\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 38\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Regione:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: regione,\n      onChange: e => {\n        setRegione(e.target.value);\n        setProvincia('');\n        setLocalita('');\n      },\n      required: true,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"-- Seleziona regione --\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), REGIONI.map(r => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: r,\n        children: r\n      }, r, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 27\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Provincia:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: provincia,\n      onChange: e => {\n        setProvincia(e.target.value);\n        setLocalita('');\n      },\n      required: true,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"-- Seleziona provincia --\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), provincieDisponibili.map(prov => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: prov,\n        children: prov\n      }, prov, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 45\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Comune:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: localita,\n      onChange: e => setLocalita(e.target.value),\n      required: true,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"-- Seleziona comune --\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), comuniDisponibili.map(com => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: com,\n        children: com\n      }, com, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 41\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      placeholder: \"Descrizione dettagliata\",\n      value: descrizione,\n      onChange: e => setDescrizione(e.target.value),\n      rows: 5,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 144\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Contatti aggiuntivi (opzionale)\",\n      value: contatti,\n      onChange: e => setContatti(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 137\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: urgenza,\n        onChange: () => setUrgenza(!urgenza)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), \" Urgente\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"image/*\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 73\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 79\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      disabled: loading,\n      children: loading ? 'Invio...' : 'Invia richiesta'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this), messaggio && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: messaggio.startsWith('✅') ? 'green' : 'red'\n      },\n      children: messaggio\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 5\n  }, this);\n};\n_s(RichiestaForm, \"/OsoVt5NTfUk/tVnZFE4rID3IoY=\");\n_c = RichiestaForm;\nexport default RichiestaForm;\nvar _c;\n$RefreshReg$(_c, \"RichiestaForm\");","map":{"version":3,"names":["React","useState","useEffect","API_BASE","jsxDEV","_jsxDEV","CATEGORIE","REGIONI","RichiestaForm","_s","categorie","regione","setRegione","provincia","setProvincia","localita","setLocalita","provincieDisponibili","setProvincieDisponibili","comuniDisponibili","setComuniDisponibili","categoria","setCategoria","descrizione","setDescrizione","contatti","setContatti","urgenza","setUrgenza","file","setFile","messaggio","setMessaggio","loading","setLoading","fetch","then","res","json","catch","handleFileChange","e","target","files","size","type","startsWith","handleSubmit","preventDefault","token","localStorage","getItem","media_url","formData","FormData","append","uploadRes","method","headers","Authorization","body","uploadData","ok","Error","error","url","JSON","stringify","data","err","console","onSubmit","style","maxWidth","margin","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","required","map","cat","idx","r","prov","com","placeholder","rows","checked","accept","disabled","color","_c","$RefreshReg$"],"sources":["C:/Users/151702/Desktop/Inquotus/Inquotus-frontend-ruoli/src/richieste/RichiestaForm.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { API_BASE } from '../config/config';\n\nconst CATEGORIE = [\n  '✅ Lavori speciali / Edili - Rimozione neve da tetti',\n  '✅ Lavori speciali / Edili - Messa in sicurezza cornicioni o elementi pericolanti',\n  '✅ Lavori speciali / Edili - Riparazione coperture e tetti',\n  '✅ Lavori speciali / Edili - Rifacimento intonaci o pittura facciate',\n  '✅ Lavori speciali / Edili - Interventi su canne fumarie',\n  '✅ Lavori speciali / Edili - Montaggio pannelli solari termici',\n  '✅ Manutenzione e Pulizia - Pulizia tetti',\n  '✅ Manutenzione e Pulizia - Pulizia grondaie',\n  '✅ Manutenzione e Pulizia - Pulizia vetri/vetrate in quota',\n  '✅ Manutenzione e Pulizia - Pulizia pannelli fotovoltaici',\n  '✅ Manutenzione e Pulizia - Pulizia facciate',\n  '✅ Manutenzione e Pulizia - Pulizia silos e ciminiere',\n  '✅ Ispezioni e Controlli - Ispezione facciate',\n  '✅ Ispezioni e Controlli - Ispezione coperture industriali',\n  '✅ Ispezioni e Controlli - Ispezione pale eoliche',\n  '✅ Ispezioni e Controlli - Ispezione torri e antenne',\n  '✅ Ispezioni e Controlli - Ispezione con droni',\n  '✅ Installazioni - Installazione antenne TV o parabole',\n  '✅ Installazioni - Installazione impianti fotovoltaici',\n  '✅ Installazioni - Installazione climatizzatori in quota',\n  '✅ Installazioni - Installazione insegne e cartellonistica',\n  '✅ Installazioni - Installazione linea vita',\n  '✅ Installazioni - Installazione parafulmini',\n  '✅ Installazioni - Montaggio ponteggi mobili temporanei',\n  '✅ Taglio e Verde - Potatura alberi ad alto fusto',\n  '✅ Taglio e Verde - Abbattimento controllato alberi',\n  '✅ Taglio e Verde - Potatura siepi in quota',\n  '✅ Altro - Altro (specifica...)'\n];\n\nconst REGIONI = [\n  'Abruzzo', 'Basilicata', 'Calabria', 'Campania', 'Emilia-Romagna', 'Friuli-Venezia Giulia',\n  'Lazio', 'Liguria', 'Lombardia', 'Marche', 'Molise', 'Piemonte',\n  'Puglia', 'Sardegna', 'Sicilia', 'Toscana', 'Trentino-Alto Adige', 'Umbria',\n  \"Valle d'Aosta\", 'Veneto'\n];\n\nconst RichiestaForm = () => {\n  const [categorie] = useState(CATEGORIE);\n  const [regione, setRegione] = useState('');\n  const [provincia, setProvincia] = useState('');\n  const [localita, setLocalita] = useState('');\n  const [provincieDisponibili, setProvincieDisponibili] = useState([]);\n  const [comuniDisponibili, setComuniDisponibili] = useState([]);\n  const [categoria, setCategoria] = useState('');\n  const [descrizione, setDescrizione] = useState('');\n  const [contatti, setContatti] = useState('');\n  const [urgenza, setUrgenza] = useState(false);\n  const [file, setFile] = useState(null);\n  const [messaggio, setMessaggio] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    if (regione) {\n      fetch(`/data/province/${regione}.json`)\n        .then(res => res.json())\n        .then(setProvincieDisponibili)\n        .catch(() => setProvincieDisponibili([]));\n    } else {\n      setProvincieDisponibili([]);\n    }\n  }, [regione]);\n\n  useEffect(() => {\n    if (provincia) {\n      fetch(`/data/comuni/${provincia}.json`)\n        .then(res => res.json())\n        .then(setComuniDisponibili)\n        .catch(() => setComuniDisponibili([]));\n    } else {\n      setComuniDisponibili([]);\n    }\n  }, [provincia]);\n\n  const handleFileChange = (e) => {\n    const file = e.target.files[0];\n    if (file && file.size > 2 * 1024 * 1024) {\n      setMessaggio('❌ L\\'immagine non deve superare i 2MB');\n      return;\n    }\n    if (file && !file.type.startsWith('image/')) {\n      setMessaggio('❌ Formato immagine non valido');\n      return;\n    }\n    setFile(file);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    const token = localStorage.getItem('token');\n    let media_url = '';\n\n    try {\n      if (file) {\n        const formData = new FormData();\n        formData.append('immagine', file);\n        const uploadRes = await fetch(`${API_BASE}/api/upload`, {\n          method: 'POST',\n          headers: { Authorization: `Bearer ${token}` },\n          body: formData\n        });\n        const uploadData = await uploadRes.json();\n        if (!uploadRes.ok) throw new Error(uploadData.error);\n        media_url = uploadData.url;\n      }\n\n      const body = { categoria, localita, provincia, regione, descrizione, contatti, urgenza, media_url };\n\n      const res = await fetch(`${API_BASE}/api/richiesta`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json', Authorization: `Bearer ${token}` },\n        body: JSON.stringify(body)\n      });\n\n      const data = await res.json();\n      if (res.ok) {\n        setMessaggio('✅ Richiesta inviata con successo!');\n        setCategoria('');\n        setLocalita('');\n        setProvincia('');\n        setRegione('');\n        setDescrizione('');\n        setContatti('');\n        setUrgenza(false);\n        setFile(null);\n      } else {\n        setMessaggio(`❌ Errore: ${data.error}`);\n      }\n    } catch (err) {\n      console.error(err);\n      setMessaggio('❌ Errore invio richiesta');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit} style={{ maxWidth: '600px', margin: '2rem auto' }}>\n      <h2>📝 Inserisci una nuova richiesta</h2>\n\n      <label>Categoria:</label>\n      <select value={categoria} onChange={(e) => setCategoria(e.target.value)} required>\n        <option value=\"\">-- Seleziona --</option>\n        {categorie.map((cat, idx) => <option key={idx} value={cat}>{cat}</option>)}\n      </select><br /><br />\n\n      <label>Regione:</label>\n      <select value={regione} onChange={(e) => { setRegione(e.target.value); setProvincia(''); setLocalita(''); }} required>\n        <option value=\"\">-- Seleziona regione --</option>\n        {REGIONI.map(r => <option key={r} value={r}>{r}</option>)}\n      </select><br /><br />\n\n      <label>Provincia:</label>\n      <select value={provincia} onChange={(e) => { setProvincia(e.target.value); setLocalita(''); }} required>\n        <option value=\"\">-- Seleziona provincia --</option>\n        {provincieDisponibili.map((prov) => <option key={prov} value={prov}>{prov}</option>)}\n      </select><br /><br />\n\n      <label>Comune:</label>\n      <select value={localita} onChange={(e) => setLocalita(e.target.value)} required>\n        <option value=\"\">-- Seleziona comune --</option>\n        {comuniDisponibili.map((com) => <option key={com} value={com}>{com}</option>)}\n      </select><br /><br />\n\n      <textarea placeholder=\"Descrizione dettagliata\" value={descrizione} onChange={(e) => setDescrizione(e.target.value)} rows={5} required /><br />\n\n      <input type=\"text\" placeholder=\"Contatti aggiuntivi (opzionale)\" value={contatti} onChange={(e) => setContatti(e.target.value)} /><br />\n\n      <label>\n        <input type=\"checkbox\" checked={urgenza} onChange={() => setUrgenza(!urgenza)} /> Urgente\n      </label><br /><br />\n\n      <input type=\"file\" accept=\"image/*\" onChange={handleFileChange} /><br /><br />\n\n      <button type=\"submit\" disabled={loading}>{loading ? 'Invio...' : 'Invia richiesta'}</button>\n\n      {messaggio && <p style={{ color: messaggio.startsWith('✅') ? 'green' : 'red' }}>{messaggio}</p>}\n    </form>\n  );\n};\n\nexport default RichiestaForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}