{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\151702\\\\Desktop\\\\Inquotus\\\\Inquotus-frontend-ruoli\\\\src\\\\pages\\\\ResetPassword.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { API_BASE } from '../config/config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResetPassword = () => {\n  _s();\n  const {\n    token\n  } = useParams();\n  const [password, setPassword] = useState('');\n  const [msg, setMsg] = useState('');\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setMsg('');\n    try {\n      const res = await fetch(`${API_BASE}/api/password-reset/${token}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          password\n        })\n      });\n      const data = await res.json();\n      if (res.ok) {\n        setMsg('✅ Password aggiornata!');\n        setTimeout(() => navigate('/login'), 2000);\n      } else {\n        setMsg(data.error);\n      }\n    } catch (err) {\n      setMsg('Errore di connessione al server');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: '400px',\n      margin: '2rem auto'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Imposta nuova password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Nuova password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true,\n        style: {\n          width: '100%',\n          marginBottom: '1rem'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Aggiorna password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), msg && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        marginTop: '1rem'\n      },\n      children: msg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(ResetPassword, \"g721C6KSMAeKcUmXzUZiwqRqlgA=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","useParams","useNavigate","API_BASE","jsxDEV","_jsxDEV","ResetPassword","_s","token","password","setPassword","msg","setMsg","navigate","handleSubmit","e","preventDefault","res","fetch","method","headers","body","JSON","stringify","data","json","ok","setTimeout","error","err","style","maxWidth","margin","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","width","marginBottom","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/151702/Desktop/Inquotus/Inquotus-frontend-ruoli/src/pages/ResetPassword.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { API_BASE } from '../config/config';\n\nconst ResetPassword = () => {\n  const { token } = useParams();\n  const [password, setPassword] = useState('');\n  const [msg, setMsg] = useState('');\n  const navigate = useNavigate();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setMsg('');\n    try {\n      const res = await fetch(`${API_BASE}/api/password-reset/${token}`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ password })\n      });\n      const data = await res.json();\n      if (res.ok) {\n        setMsg('✅ Password aggiornata!');\n        setTimeout(() => navigate('/login'), 2000);\n      } else {\n        setMsg(data.error);\n      }\n    } catch (err) {\n      setMsg('Errore di connessione al server');\n    }\n  };\n\n  return (\n    <div style={{ maxWidth: '400px', margin: '2rem auto' }}>\n      <h2>Imposta nuova password</h2>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"password\"\n          placeholder=\"Nuova password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          required\n          style={{ width: '100%', marginBottom: '1rem' }}\n        />\n        <button type=\"submit\">Aggiorna password</button>\n      </form>\n      {msg && <p style={{ marginTop: '1rem' }}>{msg}</p>}\n    </div>\n  );\n};\n\nexport default ResetPassword;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}