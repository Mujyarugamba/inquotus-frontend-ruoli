{"ast":null,"code":"import React,{useEffect,useState}from'react';import{createClient}from'@supabase/supabase-js';import{BarChart,Bar,XAxis,YAxis,Tooltip,Legend,ResponsiveContainer}from'recharts';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const supabase=createClient(process.env.REACT_APP_SUPABASE_URL,process.env.REACT_APP_SUPABASE_ANON_KEY);const AdminDashboard=()=>{const[stats,setStats]=useState({richieste:0,utenti:0,entrate:0});const[grafico,setGrafico]=useState([]);const[loading,setLoading]=useState(true);useEffect(()=>{const fetchStats=async()=>{const[{count:countRichieste},{count:countUtenti}]=await Promise.all([supabase.from('richieste').select('*',{count:'exact',head:true}),supabase.from('utenti').select('*',{count:'exact',head:true})]);// Dummy entrate Stripe (valore statico)\nconst entrateStripe=1260.50;setStats({richieste:countRichieste||0,utenti:countUtenti||0,entrate:entrateStripe});};const fetchGrafico=async()=>{const{data,error}=await supabase.from('analytics_richieste').select('data_evento').order('data_evento',{ascending:true});if(!error&&data){const aggregati={};data.forEach(entry=>{const giorno=new Date(entry.data_evento).toISOString().split('T')[0];if(!aggregati[giorno])aggregati[giorno]=0;aggregati[giorno]++;});const dati=Object.entries(aggregati).map(_ref=>{let[data_evento,conteggio]=_ref;return{data_evento,conteggio};});setGrafico(dati);}setLoading(false);};fetchStats();fetchGrafico();},[]);return/*#__PURE__*/_jsxs(\"div\",{style:{padding:'2rem'},children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\uD83D\\uDEE0\\uFE0F AreaLavoro Amministratore\"}),/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:'2rem'},children:[/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Totale richieste:\"}),\" \",stats.richieste]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Totale utenti:\"}),\" \",stats.utenti]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Entrate Stripe (dummy):\"}),\" \\u20AC\",stats.entrate.toFixed(2)]})]}),/*#__PURE__*/_jsx(\"h3\",{children:\"\\uD83D\\uDCC8 Grafico richieste per giorno\"}),loading?/*#__PURE__*/_jsx(\"p\",{children:\"Caricamento grafico...\"}):/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:300,children:/*#__PURE__*/_jsxs(BarChart,{data:grafico,children:[/*#__PURE__*/_jsx(XAxis,{dataKey:\"data_evento\"}),/*#__PURE__*/_jsx(YAxis,{}),/*#__PURE__*/_jsx(Tooltip,{}),/*#__PURE__*/_jsx(Legend,{}),/*#__PURE__*/_jsx(Bar,{dataKey:\"conteggio\",fill:\"#8884d8\",name:\"Richieste\"})]})})]});};export default AdminDashboard;","map":{"version":3,"names":["React","useEffect","useState","createClient","BarChart","Bar","XAxis","YAxis","Tooltip","Legend","ResponsiveContainer","jsx","_jsx","jsxs","_jsxs","supabase","process","env","REACT_APP_SUPABASE_URL","REACT_APP_SUPABASE_ANON_KEY","AdminDashboard","stats","setStats","richieste","utenti","entrate","grafico","setGrafico","loading","setLoading","fetchStats","count","countRichieste","countUtenti","Promise","all","from","select","head","entrateStripe","fetchGrafico","data","error","order","ascending","aggregati","forEach","entry","giorno","Date","data_evento","toISOString","split","dati","Object","entries","map","_ref","conteggio","style","padding","children","marginBottom","toFixed","width","height","dataKey","fill","name"],"sources":["C:/Users/151702/Desktop/Inquotus/Inquotus-frontend-ruoli/src/admin/AdminDashboard.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { createClient } from '@supabase/supabase-js';\nimport { BarChart, Bar, XAxis, YAxis, Tooltip, Legend, ResponsiveContainer } from 'recharts';\n\nconst supabase = createClient(\n  process.env.REACT_APP_SUPABASE_URL,\n  process.env.REACT_APP_SUPABASE_ANON_KEY\n);\n\nconst AdminDashboard = () => {\n  const [stats, setStats] = useState({ richieste: 0, utenti: 0, entrate: 0 });\n  const [grafico, setGrafico] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchStats = async () => {\n      const [{ count: countRichieste }, { count: countUtenti }] = await Promise.all([\n        supabase.from('richieste').select('*', { count: 'exact', head: true }),\n        supabase.from('utenti').select('*', { count: 'exact', head: true })\n      ]);\n\n      // Dummy entrate Stripe (valore statico)\n      const entrateStripe = 1260.50;\n\n      setStats({\n        richieste: countRichieste || 0,\n        utenti: countUtenti || 0,\n        entrate: entrateStripe\n      });\n    };\n\n    const fetchGrafico = async () => {\n      const { data, error } = await supabase\n        .from('analytics_richieste')\n        .select('data_evento')\n        .order('data_evento', { ascending: true });\n\n      if (!error && data) {\n        const aggregati = {};\n        data.forEach(entry => {\n          const giorno = new Date(entry.data_evento).toISOString().split('T')[0];\n          if (!aggregati[giorno]) aggregati[giorno] = 0;\n          aggregati[giorno]++;\n        });\n        const dati = Object.entries(aggregati).map(([data_evento, conteggio]) => ({ data_evento, conteggio }));\n        setGrafico(dati);\n      }\n      setLoading(false);\n    };\n\n    fetchStats();\n    fetchGrafico();\n  }, []);\n\n  return (\n    <div style={{ padding: '2rem' }}>\n      <h2>üõ†Ô∏è AreaLavoro Amministratore</h2>\n\n      <div style={{ marginBottom: '2rem' }}>\n        <p><strong>Totale richieste:</strong> {stats.richieste}</p>\n        <p><strong>Totale utenti:</strong> {stats.utenti}</p>\n        <p><strong>Entrate Stripe (dummy):</strong> ‚Ç¨{stats.entrate.toFixed(2)}</p>\n      </div>\n\n      <h3>üìà Grafico richieste per giorno</h3>\n      {loading ? (\n        <p>Caricamento grafico...</p>\n      ) : (\n        <ResponsiveContainer width=\"100%\" height={300}>\n          <BarChart data={grafico}>\n            <XAxis dataKey=\"data_evento\" />\n            <YAxis />\n            <Tooltip />\n            <Legend />\n            <Bar dataKey=\"conteggio\" fill=\"#8884d8\" name=\"Richieste\" />\n          </BarChart>\n        </ResponsiveContainer>\n      )}\n    </div>\n  );\n};\n\nexport default AdminDashboard;\n\n\n\n\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}