{"ast":null,"code":"import { createClient } from '@supabase/supabase-js';\nconst supabase = createClient(process.env.REACT_APP_SUPABASE_URL, process.env.REACT_APP_SUPABASE_ANON_KEY);\n\n/**\n * Salva una notifica personalizzata su Supabase.\n * @param {Object} options\n * @param {string} options.email_utente - Email destinatario\n * @param {string} options.tipo - Tipo evento (INSERT, UPDATE, DELETE, ecc.)\n * @param {string} options.descrizione - Messaggio della notifica\n */\nexport async function salvaNotifica({\n  email_utente,\n  tipo,\n  descrizione\n}) {\n  if (!email_utente || !tipo || !descrizione) {\n    console.warn('salvaNotifica: parametri incompleti');\n    return;\n  }\n  const {\n    error\n  } = await supabase.from('notifiche').insert([{\n    email_utente,\n    tipo,\n    descrizione,\n    letto: false,\n    timestamp: new Date().toISOString()\n  }]);\n  if (error) {\n    console.error('Errore nel salvataggio della notifica:', error.message);\n  }\n}","map":{"version":3,"names":["createClient","supabase","process","env","REACT_APP_SUPABASE_URL","REACT_APP_SUPABASE_ANON_KEY","salvaNotifica","email_utente","tipo","descrizione","console","warn","error","from","insert","letto","timestamp","Date","toISOString","message"],"sources":["C:/Users/151702/Desktop/Inquotus/Inquotus-frontend-ruoli/src/utils/salvaNotifica.js"],"sourcesContent":["import { createClient } from '@supabase/supabase-js';\n\nconst supabase = createClient(\n  process.env.REACT_APP_SUPABASE_URL,\n  process.env.REACT_APP_SUPABASE_ANON_KEY\n);\n\n/**\n * Salva una notifica personalizzata su Supabase.\n * @param {Object} options\n * @param {string} options.email_utente - Email destinatario\n * @param {string} options.tipo - Tipo evento (INSERT, UPDATE, DELETE, ecc.)\n * @param {string} options.descrizione - Messaggio della notifica\n */\nexport async function salvaNotifica({ email_utente, tipo, descrizione }) {\n  if (!email_utente || !tipo || !descrizione) {\n    console.warn('salvaNotifica: parametri incompleti');\n    return;\n  }\n\n  const { error } = await supabase.from('notifiche').insert([\n    {\n      email_utente,\n      tipo,\n      descrizione,\n      letto: false,\n      timestamp: new Date().toISOString()\n    }\n  ]);\n\n  if (error) {\n    console.error('Errore nel salvataggio della notifica:', error.message);\n  }\n}\n"],"mappings":"AAAA,SAASA,YAAY,QAAQ,uBAAuB;AAEpD,MAAMC,QAAQ,GAAGD,YAAY,CAC3BE,OAAO,CAACC,GAAG,CAACC,sBAAsB,EAClCF,OAAO,CAACC,GAAG,CAACE,2BACd,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,eAAeC,aAAaA,CAAC;EAAEC,YAAY;EAAEC,IAAI;EAAEC;AAAY,CAAC,EAAE;EACvE,IAAI,CAACF,YAAY,IAAI,CAACC,IAAI,IAAI,CAACC,WAAW,EAAE;IAC1CC,OAAO,CAACC,IAAI,CAAC,qCAAqC,CAAC;IACnD;EACF;EAEA,MAAM;IAAEC;EAAM,CAAC,GAAG,MAAMX,QAAQ,CAACY,IAAI,CAAC,WAAW,CAAC,CAACC,MAAM,CAAC,CACxD;IACEP,YAAY;IACZC,IAAI;IACJC,WAAW;IACXM,KAAK,EAAE,KAAK;IACZC,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;EACpC,CAAC,CACF,CAAC;EAEF,IAAIN,KAAK,EAAE;IACTF,OAAO,CAACE,KAAK,CAAC,wCAAwC,EAAEA,KAAK,CAACO,OAAO,CAAC;EACxE;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}