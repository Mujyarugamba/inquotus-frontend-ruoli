{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\151702\\\\Desktop\\\\Inquotus\\\\Inquotus-frontend-ruoli\\\\src\\\\CategoriaForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CategoriaForm = ({\n  onChange\n}) => {\n  _s();\n  const [categorie, setCategorie] = useState({});\n  useEffect(() => {\n    fetch('/categorie_raggruppate.json').then(res => res.json()).then(data => setCategorie(data)).catch(err => console.error('Errore caricamento categorie:', err));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"categoria\",\n      children: \"Categoria del lavoro:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 63\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"categoria\",\n      onChange: onChange,\n      required: true,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"-- Seleziona una categoria --\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), Object.entries(categorie).map(([gruppo, opzioni]) => /*#__PURE__*/_jsxDEV(\"optgroup\", {\n        label: gruppo,\n        children: opzioni.map((cat, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: cat,\n          children: cat\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 15\n        }, this))\n      }, gruppo, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n_s(CategoriaForm, \"ZrGPb/YeZg8rHUvS0n2ETJAOi5o=\");\n_c = CategoriaForm;\nexport default CategoriaForm;\nvar _c;\n$RefreshReg$(_c, \"CategoriaForm\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","CategoriaForm","onChange","_s","categorie","setCategorie","fetch","then","res","json","data","catch","err","console","error","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","name","required","value","Object","entries","map","gruppo","opzioni","label","cat","index","_c","$RefreshReg$"],"sources":["C:/Users/151702/Desktop/Inquotus/Inquotus-frontend-ruoli/src/CategoriaForm.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nconst CategoriaForm = ({ onChange }) => {\n  const [categorie, setCategorie] = useState({});\n\n  useEffect(() => {\n    fetch('/categorie_raggruppate.json')\n      .then((res) => res.json())\n      .then((data) => setCategorie(data))\n      .catch((err) => console.error('Errore caricamento categorie:', err));\n  }, []);\n\n  return (\n    <div>\n      <label htmlFor=\"categoria\">Categoria del lavoro:</label><br />\n      <select name=\"categoria\" onChange={onChange} required>\n        <option value=\"\">-- Seleziona una categoria --</option>\n        {Object.entries(categorie).map(([gruppo, opzioni]) => (\n          <optgroup key={gruppo} label={gruppo}>\n            {opzioni.map((cat, index) => (\n              <option key={index} value={cat}>{cat}</option>\n            ))}\n          </optgroup>\n        ))}\n      </select>\n    </div>\n  );\n};\n\nexport default CategoriaForm;\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACtC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC,CAAC;EAE9CD,SAAS,CAAC,MAAM;IACdS,KAAK,CAAC,6BAA6B,CAAC,CACjCC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAKL,YAAY,CAACK,IAAI,CAAC,CAAC,CAClCC,KAAK,CAAEC,GAAG,IAAKC,OAAO,CAACC,KAAK,CAAC,+BAA+B,EAAEF,GAAG,CAAC,CAAC;EACxE,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEZ,OAAA;IAAAe,QAAA,gBACEf,OAAA;MAAOgB,OAAO,EAAC,WAAW;MAAAD,QAAA,EAAC;IAAqB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAAApB,OAAA;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC9DpB,OAAA;MAAQqB,IAAI,EAAC,WAAW;MAACnB,QAAQ,EAAEA,QAAS;MAACoB,QAAQ;MAAAP,QAAA,gBACnDf,OAAA;QAAQuB,KAAK,EAAC,EAAE;QAAAR,QAAA,EAAC;MAA6B;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EACtDI,MAAM,CAACC,OAAO,CAACrB,SAAS,CAAC,CAACsB,GAAG,CAAC,CAAC,CAACC,MAAM,EAAEC,OAAO,CAAC,kBAC/C5B,OAAA;QAAuB6B,KAAK,EAAEF,MAAO;QAAAZ,QAAA,EAClCa,OAAO,CAACF,GAAG,CAAC,CAACI,GAAG,EAAEC,KAAK,kBACtB/B,OAAA;UAAoBuB,KAAK,EAAEO,GAAI;UAAAf,QAAA,EAAEe;QAAG,GAAvBC,KAAK;UAAAd,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAA2B,CAC9C;MAAC,GAHWO,MAAM;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIX,CACX,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACjB,EAAA,CAzBIF,aAAa;AAAA+B,EAAA,GAAb/B,aAAa;AA2BnB,eAAeA,aAAa;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}