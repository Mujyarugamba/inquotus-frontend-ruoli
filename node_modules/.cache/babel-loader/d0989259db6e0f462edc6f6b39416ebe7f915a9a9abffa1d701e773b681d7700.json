{"ast":null,"code":"import { createClient } from '@supabase/supabase-js';\nconst supabase = createClient(process.env.REACT_APP_SUPABASE_URL, process.env.REACT_APP_SUPABASE_ANON_KEY);\nconst MAX_SIZE_MB = 3;\nconst ALLOWED_TYPES = ['image/jpeg', 'image/png'];\nconst useUploadImmagine = () => {\n  const upload = async (file, emailUtente) => {\n    if (!file || !emailUtente) return {\n      url: '',\n      error: 'File o utente non valido.'\n    };\n\n    // Validazione formato\n    if (!ALLOWED_TYPES.includes(file.type)) {\n      return {\n        url: '',\n        error: 'Formato non supportato. Usa JPEG o PNG.'\n      };\n    }\n\n    // Validazione dimensione\n    const maxBytes = MAX_SIZE_MB * 1024 * 1024;\n    if (file.size > maxBytes) {\n      return {\n        url: '',\n        error: `Il file supera i ${MAX_SIZE_MB}MB.`\n      };\n    }\n    const timestamp = Date.now();\n    const fileName = `${emailUtente}/${timestamp}-${file.name}`;\n    const {\n      data,\n      error\n    } = await supabase.storage.from('richieste').upload(fileName, file, {\n      cacheControl: '3600',\n      upsert: true\n    });\n    if (error) {\n      console.error('Errore upload immagine:', error);\n      return {\n        url: '',\n        error: 'Errore durante l\\'upload.'\n      };\n    }\n    const {\n      data: publicUrlData\n    } = supabase.storage.from('richieste').getPublicUrl(fileName);\n    return {\n      url: (publicUrlData === null || publicUrlData === void 0 ? void 0 : publicUrlData.publicUrl) || '',\n      error: null\n    };\n  };\n  return {\n    upload\n  };\n};\nexport default useUploadImmagine;","map":{"version":3,"names":["createClient","supabase","process","env","REACT_APP_SUPABASE_URL","REACT_APP_SUPABASE_ANON_KEY","MAX_SIZE_MB","ALLOWED_TYPES","useUploadImmagine","upload","file","emailUtente","url","error","includes","type","maxBytes","size","timestamp","Date","now","fileName","name","data","storage","from","cacheControl","upsert","console","publicUrlData","getPublicUrl","publicUrl"],"sources":["C:/Users/151702/Desktop/Inquotus/Inquotus-frontend-ruoli/src/hooks/useUploadImmagine.js"],"sourcesContent":["import { createClient } from '@supabase/supabase-js';\n\nconst supabase = createClient(\n  process.env.REACT_APP_SUPABASE_URL,\n  process.env.REACT_APP_SUPABASE_ANON_KEY\n);\n\nconst MAX_SIZE_MB = 3;\nconst ALLOWED_TYPES = ['image/jpeg', 'image/png'];\n\nconst useUploadImmagine = () => {\n  const upload = async (file, emailUtente) => {\n    if (!file || !emailUtente) return { url: '', error: 'File o utente non valido.' };\n\n    // Validazione formato\n    if (!ALLOWED_TYPES.includes(file.type)) {\n      return { url: '', error: 'Formato non supportato. Usa JPEG o PNG.' };\n    }\n\n    // Validazione dimensione\n    const maxBytes = MAX_SIZE_MB * 1024 * 1024;\n    if (file.size > maxBytes) {\n      return { url: '', error: `Il file supera i ${MAX_SIZE_MB}MB.` };\n    }\n\n    const timestamp = Date.now();\n    const fileName = `${emailUtente}/${timestamp}-${file.name}`;\n\n    const { data, error } = await supabase.storage\n      .from('richieste')\n      .upload(fileName, file, {\n        cacheControl: '3600',\n        upsert: true,\n      });\n\n    if (error) {\n      console.error('Errore upload immagine:', error);\n      return { url: '', error: 'Errore durante l\\'upload.' };\n    }\n\n    const { data: publicUrlData } = supabase\n      .storage\n      .from('richieste')\n      .getPublicUrl(fileName);\n\n    return { url: publicUrlData?.publicUrl || '', error: null };\n  };\n\n  return { upload };\n};\n\nexport default useUploadImmagine\n"],"mappings":"AAAA,SAASA,YAAY,QAAQ,uBAAuB;AAEpD,MAAMC,QAAQ,GAAGD,YAAY,CAC3BE,OAAO,CAACC,GAAG,CAACC,sBAAsB,EAClCF,OAAO,CAACC,GAAG,CAACE,2BACd,CAAC;AAED,MAAMC,WAAW,GAAG,CAAC;AACrB,MAAMC,aAAa,GAAG,CAAC,YAAY,EAAE,WAAW,CAAC;AAEjD,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAC9B,MAAMC,MAAM,GAAG,MAAAA,CAAOC,IAAI,EAAEC,WAAW,KAAK;IAC1C,IAAI,CAACD,IAAI,IAAI,CAACC,WAAW,EAAE,OAAO;MAAEC,GAAG,EAAE,EAAE;MAAEC,KAAK,EAAE;IAA4B,CAAC;;IAEjF;IACA,IAAI,CAACN,aAAa,CAACO,QAAQ,CAACJ,IAAI,CAACK,IAAI,CAAC,EAAE;MACtC,OAAO;QAAEH,GAAG,EAAE,EAAE;QAAEC,KAAK,EAAE;MAA0C,CAAC;IACtE;;IAEA;IACA,MAAMG,QAAQ,GAAGV,WAAW,GAAG,IAAI,GAAG,IAAI;IAC1C,IAAII,IAAI,CAACO,IAAI,GAAGD,QAAQ,EAAE;MACxB,OAAO;QAAEJ,GAAG,EAAE,EAAE;QAAEC,KAAK,EAAE,oBAAoBP,WAAW;MAAM,CAAC;IACjE;IAEA,MAAMY,SAAS,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC;IAC5B,MAAMC,QAAQ,GAAG,GAAGV,WAAW,IAAIO,SAAS,IAAIR,IAAI,CAACY,IAAI,EAAE;IAE3D,MAAM;MAAEC,IAAI;MAAEV;IAAM,CAAC,GAAG,MAAMZ,QAAQ,CAACuB,OAAO,CAC3CC,IAAI,CAAC,WAAW,CAAC,CACjBhB,MAAM,CAACY,QAAQ,EAAEX,IAAI,EAAE;MACtBgB,YAAY,EAAE,MAAM;MACpBC,MAAM,EAAE;IACV,CAAC,CAAC;IAEJ,IAAId,KAAK,EAAE;MACTe,OAAO,CAACf,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/C,OAAO;QAAED,GAAG,EAAE,EAAE;QAAEC,KAAK,EAAE;MAA4B,CAAC;IACxD;IAEA,MAAM;MAAEU,IAAI,EAAEM;IAAc,CAAC,GAAG5B,QAAQ,CACrCuB,OAAO,CACPC,IAAI,CAAC,WAAW,CAAC,CACjBK,YAAY,CAACT,QAAQ,CAAC;IAEzB,OAAO;MAAET,GAAG,EAAE,CAAAiB,aAAa,aAAbA,aAAa,uBAAbA,aAAa,CAAEE,SAAS,KAAI,EAAE;MAAElB,KAAK,EAAE;IAAK,CAAC;EAC7D,CAAC;EAED,OAAO;IAAEJ;EAAO,CAAC;AACnB,CAAC;AAED,eAAeD,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}