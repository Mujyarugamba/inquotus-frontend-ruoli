{"ast":null,"code":"import React,{useEffect,useState}from'react';import{Navigate,useLocation}from'react-router-dom';import{jsx as _jsx}from\"react/jsx-runtime\";const PrivateRoute=_ref=>{let{children,ruolo}=_ref;const location=useLocation();const[loading,setLoading]=useState(true);const[autorizzato,setAutorizzato]=useState(false);useEffect(()=>{const token=localStorage.getItem('token');if(!token){localStorage.setItem('redirectAfterLogin',location.pathname);setAutorizzato(false);setLoading(false);return;}try{const payload=JSON.parse(atob(token.split('.')[1]));if(ruolo&&payload.ruolo!==ruolo){setAutorizzato(false);}else{setAutorizzato(true);}}catch(err){console.error('Errore parsing token:',err);setAutorizzato(false);}finally{setLoading(false);}},[location.pathname,ruolo]);if(loading)return/*#__PURE__*/_jsx(\"p\",{style:{padding:'2rem'},children:\"\\u23F3 Verifica autenticazione...\"});if(!autorizzato)return/*#__PURE__*/_jsx(Navigate,{to:\"/login\"});return children;};export default PrivateRoute;","map":{"version":3,"names":["React","useEffect","useState","Navigate","useLocation","jsx","_jsx","PrivateRoute","_ref","children","ruolo","location","loading","setLoading","autorizzato","setAutorizzato","token","localStorage","getItem","setItem","pathname","payload","JSON","parse","atob","split","err","console","error","style","padding","to"],"sources":["C:/Users/151702/Desktop/Inquotus/Inquotus-frontend-ruoli/src/routes/PrivateRoute.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Navigate, useLocation } from 'react-router-dom';\n\nconst PrivateRoute = ({ children, ruolo }) => {\n  const location = useLocation();\n  const [loading, setLoading] = useState(true);\n  const [autorizzato, setAutorizzato] = useState(false);\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n\n    if (!token) {\n      localStorage.setItem('redirectAfterLogin', location.pathname);\n      setAutorizzato(false);\n      setLoading(false);\n      return;\n    }\n\n    try {\n      const payload = JSON.parse(atob(token.split('.')[1]));\n\n      if (ruolo && payload.ruolo !== ruolo) {\n        setAutorizzato(false);\n      } else {\n        setAutorizzato(true);\n      }\n    } catch (err) {\n      console.error('Errore parsing token:', err);\n      setAutorizzato(false);\n    } finally {\n      setLoading(false);\n    }\n  }, [location.pathname, ruolo]);\n\n  if (loading) return <p style={{ padding: '2rem' }}>‚è≥ Verifica autenticazione...</p>;\n  if (!autorizzato) return <Navigate to=\"/login\" />;\n\n  return children;\n};\n\nexport default PrivateRoute;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,OAASC,QAAQ,CAAEC,WAAW,KAAQ,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEzD,KAAM,CAAAC,YAAY,CAAGC,IAAA,EAAyB,IAAxB,CAAEC,QAAQ,CAAEC,KAAM,CAAC,CAAAF,IAAA,CACvC,KAAM,CAAAG,QAAQ,CAAGP,WAAW,CAAC,CAAC,CAC9B,KAAM,CAACQ,OAAO,CAAEC,UAAU,CAAC,CAAGX,QAAQ,CAAC,IAAI,CAAC,CAC5C,KAAM,CAACY,WAAW,CAAEC,cAAc,CAAC,CAAGb,QAAQ,CAAC,KAAK,CAAC,CAErDD,SAAS,CAAC,IAAM,CACd,KAAM,CAAAe,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAE3C,GAAI,CAACF,KAAK,CAAE,CACVC,YAAY,CAACE,OAAO,CAAC,oBAAoB,CAAER,QAAQ,CAACS,QAAQ,CAAC,CAC7DL,cAAc,CAAC,KAAK,CAAC,CACrBF,UAAU,CAAC,KAAK,CAAC,CACjB,OACF,CAEA,GAAI,CACF,KAAM,CAAAQ,OAAO,CAAGC,IAAI,CAACC,KAAK,CAACC,IAAI,CAACR,KAAK,CAACS,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAErD,GAAIf,KAAK,EAAIW,OAAO,CAACX,KAAK,GAAKA,KAAK,CAAE,CACpCK,cAAc,CAAC,KAAK,CAAC,CACvB,CAAC,IAAM,CACLA,cAAc,CAAC,IAAI,CAAC,CACtB,CACF,CAAE,MAAOW,GAAG,CAAE,CACZC,OAAO,CAACC,KAAK,CAAC,uBAAuB,CAAEF,GAAG,CAAC,CAC3CX,cAAc,CAAC,KAAK,CAAC,CACvB,CAAC,OAAS,CACRF,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAAE,CAACF,QAAQ,CAACS,QAAQ,CAAEV,KAAK,CAAC,CAAC,CAE9B,GAAIE,OAAO,CAAE,mBAAON,IAAA,MAAGuB,KAAK,CAAE,CAAEC,OAAO,CAAE,MAAO,CAAE,CAAArB,QAAA,CAAC,mCAA4B,CAAG,CAAC,CACnF,GAAI,CAACK,WAAW,CAAE,mBAAOR,IAAA,CAACH,QAAQ,EAAC4B,EAAE,CAAC,QAAQ,CAAE,CAAC,CAEjD,MAAO,CAAAtB,QAAQ,CACjB,CAAC,CAED,cAAe,CAAAF,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}