{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\151702\\\\Desktop\\\\Inquotus\\\\Inquotus-frontend-ruoli\\\\src\\\\routes\\\\PublicOnlyRoute.jsx\";\nimport React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PublicOnlyRoute = ({\n  children\n}) => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    try {\n      const payload = JSON.parse(atob(token.split('.')[1]));\n      switch (payload.ruolo) {\n        case 'committente':\n          return /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 12,\n            columnNumber: 18\n          }, this);\n        case 'impresa':\n          return /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/impresa\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 18\n          }, this);\n        case 'professionista':\n          return /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/professionista\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 18\n          }, this);\n        default:\n          return /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 18\n          }, this);\n      }\n    } catch (err) {\n      console.error(\"Token non valido:\", err);\n      localStorage.removeItem('token');\n    }\n  }\n  return children;\n};\n_c = PublicOnlyRoute;\nexport default PublicOnlyRoute;\nvar _c;\n$RefreshReg$(_c, \"PublicOnlyRoute\");","map":{"version":3,"names":["React","Navigate","jsxDEV","_jsxDEV","PublicOnlyRoute","children","token","localStorage","getItem","payload","JSON","parse","atob","split","ruolo","to","fileName","_jsxFileName","lineNumber","columnNumber","err","console","error","removeItem","_c","$RefreshReg$"],"sources":["C:/Users/151702/Desktop/Inquotus/Inquotus-frontend-ruoli/src/routes/PublicOnlyRoute.jsx"],"sourcesContent":["import React from 'react';\nimport { Navigate } from 'react-router-dom';\n\nconst PublicOnlyRoute = ({ children }) => {\n  const token = localStorage.getItem('token');\n\n  if (token) {\n    try {\n      const payload = JSON.parse(atob(token.split('.')[1]));\n      switch (payload.ruolo) {\n        case 'committente':\n          return <Navigate to=\"/home\" />;\n        case 'impresa':\n          return <Navigate to=\"/impresa\" />;\n        case 'professionista':\n          return <Navigate to=\"/professionista\" />;\n        default:\n          return <Navigate to=\"/\" />;\n      }\n    } catch (err) {\n      console.error(\"Token non valido:\", err);\n      localStorage.removeItem('token');\n    }\n  }\n\n  return children;\n};\n\nexport default PublicOnlyRoute;\n\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,eAAe,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EACxC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAE3C,IAAIF,KAAK,EAAE;IACT,IAAI;MACF,MAAMG,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACC,IAAI,CAACN,KAAK,CAACO,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACrD,QAAQJ,OAAO,CAACK,KAAK;QACnB,KAAK,aAAa;UAChB,oBAAOX,OAAA,CAACF,QAAQ;YAACc,EAAE,EAAC;UAAO;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAChC,KAAK,SAAS;UACZ,oBAAOhB,OAAA,CAACF,QAAQ;YAACc,EAAE,EAAC;UAAU;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QACnC,KAAK,gBAAgB;UACnB,oBAAOhB,OAAA,CAACF,QAAQ;YAACc,EAAE,EAAC;UAAiB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAC1C;UACE,oBAAOhB,OAAA,CAACF,QAAQ;YAACc,EAAE,EAAC;UAAG;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;MAC9B;IACF,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,mBAAmB,EAAEF,GAAG,CAAC;MACvCb,YAAY,CAACgB,UAAU,CAAC,OAAO,CAAC;IAClC;EACF;EAEA,OAAOlB,QAAQ;AACjB,CAAC;AAACmB,EAAA,GAvBIpB,eAAe;AAyBrB,eAAeA,eAAe;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}