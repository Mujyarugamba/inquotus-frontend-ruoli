{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\151702\\\\Desktop\\\\Inquotus\\\\Inquotus-frontend-ruoli\\\\src\\\\pages\\\\RecuperaPassword.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RecuperaPassword = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [nuovaPassword, setNuovaPassword] = useState('');\n  const [messaggio, setMessaggio] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const res = await fetch('https://inquotus-backend-auth.onrender.com/api/recupera-password', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          nuovaPassword\n        })\n      });\n      const data = await res.json();\n      if (res.ok) {\n        setMessaggio('Password aggiornata con successo!');\n      } else {\n        setMessaggio(data.error || 'Errore');\n      }\n    } catch (err) {\n      setMessaggio('Errore di connessione al server');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Recupera Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Email registrata\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 126\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Nuova password\",\n        value: nuovaPassword,\n        onChange: e => setNuovaPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 143\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Aggiorna Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), messaggio && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: messaggio\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(RecuperaPassword, \"44PWLqvpoS99YoO7ZX0ocZ/U7RY=\");\n_c = RecuperaPassword;\nexport default RecuperaPassword;\nvar _c;\n$RefreshReg$(_c, \"RecuperaPassword\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","RecuperaPassword","_s","email","setEmail","nuovaPassword","setNuovaPassword","messaggio","setMessaggio","handleSubmit","e","preventDefault","res","fetch","method","headers","body","JSON","stringify","data","json","ok","error","err","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Users/151702/Desktop/Inquotus/Inquotus-frontend-ruoli/src/pages/RecuperaPassword.jsx"],"sourcesContent":["import React, { useState } from 'react';\n\nconst RecuperaPassword = () => {\n  const [email, setEmail] = useState('');\n  const [nuovaPassword, setNuovaPassword] = useState('');\n  const [messaggio, setMessaggio] = useState('');\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const res = await fetch('https://inquotus-backend-auth.onrender.com/api/recupera-password', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ email, nuovaPassword })\n      });\n      const data = await res.json();\n      if (res.ok) {\n        setMessaggio('Password aggiornata con successo!');\n      } else {\n        setMessaggio(data.error || 'Errore');\n      }\n    } catch (err) {\n      setMessaggio('Errore di connessione al server');\n    }\n  };\n\n  return (\n    <div>\n      <h2>Recupera Password</h2>\n      <form onSubmit={handleSubmit}>\n        <input type=\"email\" placeholder=\"Email registrata\" value={email} onChange={e => setEmail(e.target.value)} required /><br />\n        <input type=\"password\" placeholder=\"Nuova password\" value={nuovaPassword} onChange={e => setNuovaPassword(e.target.value)} required /><br />\n        <button type=\"submit\">Aggiorna Password</button>\n      </form>\n      {messaggio && <p>{messaggio}</p>}\n    </div>\n  );\n};\n\nexport default RecuperaPassword;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}