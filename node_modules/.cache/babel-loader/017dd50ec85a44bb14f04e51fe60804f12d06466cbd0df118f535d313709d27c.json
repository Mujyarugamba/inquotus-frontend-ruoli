{"ast":null,"code":"import React,{createContext,useState,useEffect}from'react';import{jwtDecode}from'jwt-decode';import{jsx as _jsx}from\"react/jsx-runtime\";export const AuthContext=/*#__PURE__*/createContext();export const AuthProvider=_ref=>{let{children}=_ref;const[utente,setUtente]=useState(null);const checkToken=()=>{const token=localStorage.getItem('token');if(token){try{const decoded=jwtDecode(token);const now=Date.now()/1000;// in secondi\nif(decoded.exp<now){logout();// token scaduto\n}else{setUtente(decoded);}}catch(err){console.error('Token non valido:',err);logout();}}};useEffect(()=>{checkToken();const interval=setInterval(checkToken,60*1000);// controlla ogni minuto\nreturn()=>clearInterval(interval);},[]);const login=token=>{localStorage.setItem('token',token);const decoded=jwtDecode(token);setUtente(decoded);};const logout=()=>{localStorage.removeItem('token');setUtente(null);};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:{utente,login,logout},children:children});};","map":{"version":3,"names":["React","createContext","useState","useEffect","jwtDecode","jsx","_jsx","AuthContext","AuthProvider","_ref","children","utente","setUtente","checkToken","token","localStorage","getItem","decoded","now","Date","exp","logout","err","console","error","interval","setInterval","clearInterval","login","setItem","removeItem","Provider","value"],"sources":["C:/Users/151702/Desktop/Inquotus/Inquotus-frontend-ruoli/src/context/AuthContext.jsx"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\nimport { jwtDecode } from 'jwt-decode';\n\nexport const AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [utente, setUtente] = useState(null);\n\n  const checkToken = () => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      try {\n        const decoded = jwtDecode(token);\n        const now = Date.now() / 1000; // in secondi\n\n        if (decoded.exp < now) {\n          logout(); // token scaduto\n        } else {\n          setUtente(decoded);\n        }\n      } catch (err) {\n        console.error('Token non valido:', err);\n        logout();\n      }\n    }\n  };\n\n  useEffect(() => {\n    checkToken();\n    const interval = setInterval(checkToken, 60 * 1000); // controlla ogni minuto\n    return () => clearInterval(interval);\n  }, []);\n\n  const login = (token) => {\n    localStorage.setItem('token', token);\n    const decoded = jwtDecode(token);\n    setUtente(decoded);\n  };\n\n  const logout = () => {\n    localStorage.removeItem('token');\n    setUtente(null);\n  };\n\n  return (\n    <AuthContext.Provider value={{ utente, login, logout }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CACjE,OAASC,SAAS,KAAQ,YAAY,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEvC,MAAO,MAAM,CAAAC,WAAW,cAAGN,aAAa,CAAC,CAAC,CAE1C,MAAO,MAAM,CAAAO,YAAY,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACvC,KAAM,CAACE,MAAM,CAAEC,SAAS,CAAC,CAAGV,QAAQ,CAAC,IAAI,CAAC,CAE1C,KAAM,CAAAW,UAAU,CAAGA,CAAA,GAAM,CACvB,KAAM,CAAAC,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAC3C,GAAIF,KAAK,CAAE,CACT,GAAI,CACF,KAAM,CAAAG,OAAO,CAAGb,SAAS,CAACU,KAAK,CAAC,CAChC,KAAM,CAAAI,GAAG,CAAGC,IAAI,CAACD,GAAG,CAAC,CAAC,CAAG,IAAI,CAAE;AAE/B,GAAID,OAAO,CAACG,GAAG,CAAGF,GAAG,CAAE,CACrBG,MAAM,CAAC,CAAC,CAAE;AACZ,CAAC,IAAM,CACLT,SAAS,CAACK,OAAO,CAAC,CACpB,CACF,CAAE,MAAOK,GAAG,CAAE,CACZC,OAAO,CAACC,KAAK,CAAC,mBAAmB,CAAEF,GAAG,CAAC,CACvCD,MAAM,CAAC,CAAC,CACV,CACF,CACF,CAAC,CAEDlB,SAAS,CAAC,IAAM,CACdU,UAAU,CAAC,CAAC,CACZ,KAAM,CAAAY,QAAQ,CAAGC,WAAW,CAACb,UAAU,CAAE,EAAE,CAAG,IAAI,CAAC,CAAE;AACrD,MAAO,IAAMc,aAAa,CAACF,QAAQ,CAAC,CACtC,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAG,KAAK,CAAId,KAAK,EAAK,CACvBC,YAAY,CAACc,OAAO,CAAC,OAAO,CAAEf,KAAK,CAAC,CACpC,KAAM,CAAAG,OAAO,CAAGb,SAAS,CAACU,KAAK,CAAC,CAChCF,SAAS,CAACK,OAAO,CAAC,CACpB,CAAC,CAED,KAAM,CAAAI,MAAM,CAAGA,CAAA,GAAM,CACnBN,YAAY,CAACe,UAAU,CAAC,OAAO,CAAC,CAChClB,SAAS,CAAC,IAAI,CAAC,CACjB,CAAC,CAED,mBACEN,IAAA,CAACC,WAAW,CAACwB,QAAQ,EAACC,KAAK,CAAE,CAAErB,MAAM,CAAEiB,KAAK,CAAEP,MAAO,CAAE,CAAAX,QAAA,CACpDA,QAAQ,CACW,CAAC,CAE3B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}