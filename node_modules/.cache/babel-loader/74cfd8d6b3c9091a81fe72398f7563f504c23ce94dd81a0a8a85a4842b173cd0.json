{"ast":null,"code":"import React,{useState}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const RecuperaPassword=()=>{const[email,setEmail]=useState('');const[nuovaPassword,setNuovaPassword]=useState('');const[messaggio,setMessaggio]=useState('');const handleSubmit=async e=>{e.preventDefault();try{const res=await fetch('https://inquotus-backend-auth.onrender.com/api/recupera-password',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({email,nuovaPassword})});const data=await res.json();if(res.ok){setMessaggio('Password aggiornata con successo!');}else{setMessaggio(data.error||'Errore');}}catch(err){setMessaggio('Errore di connessione al server');}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Recupera Password\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"input\",{type:\"email\",placeholder:\"Email registrata\",value:email,onChange:e=>setEmail(e.target.value),required:true}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"Nuova password\",value:nuovaPassword,onChange:e=>setNuovaPassword(e.target.value),required:true}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Aggiorna Password\"})]}),messaggio&&/*#__PURE__*/_jsx(\"p\",{children:messaggio})]});};export default RecuperaPassword;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","RecuperaPassword","email","setEmail","nuovaPassword","setNuovaPassword","messaggio","setMessaggio","handleSubmit","e","preventDefault","res","fetch","method","headers","body","JSON","stringify","data","json","ok","error","err","children","onSubmit","type","placeholder","value","onChange","target","required"],"sources":["C:/Users/151702/Desktop/Inquotus/Inquotus-frontend-ruoli/src/pages/RecuperaPassword.jsx"],"sourcesContent":["import React, { useState } from 'react';\n\nconst RecuperaPassword = () => {\n  const [email, setEmail] = useState('');\n  const [nuovaPassword, setNuovaPassword] = useState('');\n  const [messaggio, setMessaggio] = useState('');\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const res = await fetch('https://inquotus-backend-auth.onrender.com/api/recupera-password', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ email, nuovaPassword })\n      });\n      const data = await res.json();\n      if (res.ok) {\n        setMessaggio('Password aggiornata con successo!');\n      } else {\n        setMessaggio(data.error || 'Errore');\n      }\n    } catch (err) {\n      setMessaggio('Errore di connessione al server');\n    }\n  };\n\n  return (\n    <div>\n      <h2>Recupera Password</h2>\n      <form onSubmit={handleSubmit}>\n        <input type=\"email\" placeholder=\"Email registrata\" value={email} onChange={e => setEmail(e.target.value)} required /><br />\n        <input type=\"password\" placeholder=\"Nuova password\" value={nuovaPassword} onChange={e => setNuovaPassword(e.target.value)} required /><br />\n        <button type=\"submit\">Aggiorna Password</button>\n      </form>\n      {messaggio && <p>{messaggio}</p>}\n    </div>\n  );\n};\n\nexport default RecuperaPassword;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAExC,KAAM,CAAAC,gBAAgB,CAAGA,CAAA,GAAM,CAC7B,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGP,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAACQ,aAAa,CAAEC,gBAAgB,CAAC,CAAGT,QAAQ,CAAC,EAAE,CAAC,CACtD,KAAM,CAACU,SAAS,CAAEC,YAAY,CAAC,CAAGX,QAAQ,CAAC,EAAE,CAAC,CAE9C,KAAM,CAAAY,YAAY,CAAG,KAAM,CAAAC,CAAC,EAAI,CAC9BA,CAAC,CAACC,cAAc,CAAC,CAAC,CAClB,GAAI,CACF,KAAM,CAAAC,GAAG,CAAG,KAAM,CAAAC,KAAK,CAAC,kEAAkE,CAAE,CAC1FC,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CAAE,cAAc,CAAE,kBAAmB,CAAC,CAC/CC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAEf,KAAK,CAAEE,aAAc,CAAC,CAC/C,CAAC,CAAC,CACF,KAAM,CAAAc,IAAI,CAAG,KAAM,CAAAP,GAAG,CAACQ,IAAI,CAAC,CAAC,CAC7B,GAAIR,GAAG,CAACS,EAAE,CAAE,CACVb,YAAY,CAAC,mCAAmC,CAAC,CACnD,CAAC,IAAM,CACLA,YAAY,CAACW,IAAI,CAACG,KAAK,EAAI,QAAQ,CAAC,CACtC,CACF,CAAE,MAAOC,GAAG,CAAE,CACZf,YAAY,CAAC,iCAAiC,CAAC,CACjD,CACF,CAAC,CAED,mBACEP,KAAA,QAAAuB,QAAA,eACEzB,IAAA,OAAAyB,QAAA,CAAI,mBAAiB,CAAI,CAAC,cAC1BvB,KAAA,SAAMwB,QAAQ,CAAEhB,YAAa,CAAAe,QAAA,eAC3BzB,IAAA,UAAO2B,IAAI,CAAC,OAAO,CAACC,WAAW,CAAC,kBAAkB,CAACC,KAAK,CAAEzB,KAAM,CAAC0B,QAAQ,CAAEnB,CAAC,EAAIN,QAAQ,CAACM,CAAC,CAACoB,MAAM,CAACF,KAAK,CAAE,CAACG,QAAQ,MAAE,CAAC,cAAAhC,IAAA,QAAK,CAAC,cAC3HA,IAAA,UAAO2B,IAAI,CAAC,UAAU,CAACC,WAAW,CAAC,gBAAgB,CAACC,KAAK,CAAEvB,aAAc,CAACwB,QAAQ,CAAEnB,CAAC,EAAIJ,gBAAgB,CAACI,CAAC,CAACoB,MAAM,CAACF,KAAK,CAAE,CAACG,QAAQ,MAAE,CAAC,cAAAhC,IAAA,QAAK,CAAC,cAC5IA,IAAA,WAAQ2B,IAAI,CAAC,QAAQ,CAAAF,QAAA,CAAC,mBAAiB,CAAQ,CAAC,EAC5C,CAAC,CACNjB,SAAS,eAAIR,IAAA,MAAAyB,QAAA,CAAIjB,SAAS,CAAI,CAAC,EAC7B,CAAC,CAEV,CAAC,CAED,cAAe,CAAAL,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}